{"source":2,"revision":45,"description":null,"createdBy":{"displayName":"Raja Duraisamy","url":"https://spsprodcus3.vssps.visualstudio.com/A291412be-5a4b-4595-acf5-1282c41d07f4/_apis/Identities/3b2bf0a2-0381-6d50-a1e3-81c4700b649a","_links":{"avatar":{"href":"https://dev.azure.com/JacobsDevOps/_apis/GraphProfile/MemberAvatars/aad.M2IyYmYwYTItMDM4MS03ZDUwLWExZTMtODFjNDcwMGI2NDlh"}},"id":"3b2bf0a2-0381-6d50-a1e3-81c4700b649a","uniqueName":"Raja.Duraisamy@jacobs.com","imageUrl":"https://dev.azure.com/JacobsDevOps/_apis/GraphProfile/MemberAvatars/aad.M2IyYmYwYTItMDM4MS03ZDUwLWExZTMtODFjNDcwMGI2NDlh","descriptor":"aad.M2IyYmYwYTItMDM4MS03ZDUwLWExZTMtODFjNDcwMGI2NDlh"},"createdOn":"2021-05-19T13:17:06.277Z","modifiedBy":{"displayName":"Raja Duraisamy","url":"https://spsprodcus3.vssps.visualstudio.com/A291412be-5a4b-4595-acf5-1282c41d07f4/_apis/Identities/3b2bf0a2-0381-6d50-a1e3-81c4700b649a","_links":{"avatar":{"href":"https://dev.azure.com/JacobsDevOps/_apis/GraphProfile/MemberAvatars/aad.M2IyYmYwYTItMDM4MS03ZDUwLWExZTMtODFjNDcwMGI2NDlh"}},"id":"3b2bf0a2-0381-6d50-a1e3-81c4700b649a","uniqueName":"Raja.Duraisamy@jacobs.com","imageUrl":"https://dev.azure.com/JacobsDevOps/_apis/GraphProfile/MemberAvatars/aad.M2IyYmYwYTItMDM4MS03ZDUwLWExZTMtODFjNDcwMGI2NDlh","descriptor":"aad.M2IyYmYwYTItMDM4MS03ZDUwLWExZTMtODFjNDcwMGI2NDlh"},"modifiedOn":"2021-06-07T04:12:21.750Z","isDeleted":false,"lastRelease":{"id":5490,"name":"Release-34","artifacts":[],"_links":{},"description":"","releaseDefinition":{"id":59,"projectReference":null,"_links":{}},"createdOn":"2021-06-05T16:48:31.073Z","createdBy":{"displayName":"Rajesh Khatri","url":"https://spsprodcus3.vssps.visualstudio.com/A291412be-5a4b-4595-acf5-1282c41d07f4/_apis/Identities/65ea8562-0400-66e2-9680-71a34784d004","_links":{"avatar":{"href":"https://dev.azure.com/JacobsDevOps/_apis/GraphProfile/MemberAvatars/aad.NjVlYTg1NjItMDQwMC03NmUyLTk2ODAtNzFhMzQ3ODRkMDA0"}},"id":"65ea8562-0400-66e2-9680-71a34784d004","uniqueName":"Rajesh.Khatri@jacobs.com","imageUrl":"https://dev.azure.com/JacobsDevOps/_apis/GraphProfile/MemberAvatars/aad.NjVlYTg1NjItMDQwMC03NmUyLTk2ODAtNzFhMzQ3ODRkMDA0","descriptor":"aad.NjVlYTg1NjItMDQwMC03NmUyLTk2ODAtNzFhMzQ3ODRkMDA0"}},"variables":{"action":{"value":"down","allowOverride":true},"laDefFilePath":{"value":"$(System.DefaultWorkingDirectory)\\logicappdeffiles\\dev"},"resourceGroupName":{"value":"rg-applicationservices-dev","allowOverride":true},"subscriptionName":{"value":"Global Application Services","allowOverride":true}},"variableGroups":[],"environments":[{"id":117,"name":"Weekend Maintenance ","rank":1,"owner":{"displayName":"Raja Duraisamy","url":"https://spsprodcus3.vssps.visualstudio.com/A291412be-5a4b-4595-acf5-1282c41d07f4/_apis/Identities/3b2bf0a2-0381-6d50-a1e3-81c4700b649a","_links":{"avatar":{"href":"https://dev.azure.com/JacobsDevOps/_apis/GraphProfile/MemberAvatars/aad.M2IyYmYwYTItMDM4MS03ZDUwLWExZTMtODFjNDcwMGI2NDlh"}},"id":"3b2bf0a2-0381-6d50-a1e3-81c4700b649a","uniqueName":"Raja.Duraisamy@jacobs.com","imageUrl":"https://dev.azure.com/JacobsDevOps/_apis/GraphProfile/MemberAvatars/aad.M2IyYmYwYTItMDM4MS03ZDUwLWExZTMtODFjNDcwMGI2NDlh","descriptor":"aad.M2IyYmYwYTItMDM4MS03ZDUwLWExZTMtODFjNDcwMGI2NDlh"},"variables":{},"variableGroups":[],"preDeployApprovals":{"approvals":[{"rank":1,"isAutomated":true,"isNotificationOn":false,"id":384}],"approvalOptions":{"requiredApproverCount":null,"releaseCreatorCanBeApprover":false,"autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped":false,"enforceIdentityRevalidation":false,"timeoutInMinutes":0,"executionOrder":1}},"deployStep":{"id":385},"postDeployApprovals":{"approvals":[{"rank":1,"isAutomated":true,"isNotificationOn":false,"id":386}],"approvalOptions":{"requiredApproverCount":null,"releaseCreatorCanBeApprover":false,"autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped":false,"enforceIdentityRevalidation":false,"timeoutInMinutes":0,"executionOrder":2}},"deployPhases":[{"deploymentInput":{"parallelExecution":{"parallelExecutionType":0},"agentSpecification":{"identifier":"vs2017-win2016"},"skipArtifactsDownload":false,"artifactsDownloadInput":{"downloadInputs":[]},"queueId":211,"demands":[],"enableAccessToken":false,"timeoutInMinutes":0,"jobCancelTimeoutInMinutes":1,"condition":"eq(variables['action'],'down')","overrideInputs":{}},"rank":1,"phaseType":1,"name":"Scale Down: App Service Plan Agent","refName":null,"workflowTasks":[{"environment":{},"taskId":"46e4be58-730b-4389-8a2f-ea10b3e5e815","version":"2.*","name":"Price Tier Scale Down: Azure CLI for ASP ","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"connectedServiceNameARM":"ec5448bd-1342-4db0-b0b8-75469d37f5f1","scriptType":"ps","scriptLocation":"inlineScript","scriptPath":"","inlineScript":"$url = \"https://apim-atwork-dev.azure-api.net/la/aspscalemanagement/getaspdetaillist/$(subscriptionName)/$(resourceGroupName)/$(action)\"\n$pipeline = Invoke-RestMethod -Uri $url -Headers @{Authorization = \"Bearer $env:SYSTEM_ACCESSTOKEN\"}\n$resourceGroupName = $pipeline.resourceGroupName\n$subscriptionName = $pipeline.subscriptionName\nForEach ($d in $pipeline.aspList) {\n\tWrite-Host \"-->################# Scale Down \"$d.name\" - START #################\"\n    Write-Host \"-->ASP Name = \"$d.name \n\tWrite-Host \"-->ASP Autoscale Setting Name = \"$d.autoScaleSettingName\n    ForEach ($e in $d.appServiceList) {\n        Write-Host \"-->-->App Service Name = \"$e.name \n\t\tWrite-Host \"-->-->ASP Service Resource Id = \"$e.resourceId\n\t\tWrite-Host \"-->-->Mapped Log Analytics WS = \"$e.mappedLogAnalyticsWS \n\t\tWrite-Host \"-->-->Mapped Log Analytics WS Id = \"$e.mappedLogAnalyticsWSId\n\t\tWrite-Host \"-->-->VNet Name = \"$e.vnetName \n\t\tWrite-Host \"-->-->VNet Subnet Name = \"$e.vnetSubnetName\n\t\t\n\t\tWrite-Host \"-->-->***************Disable \"$e.name\" Configuration - START*******************\"\n\t\tif ($e.vnetName -ne 'empty') {\n\t\t\tWrite-Host \"-->-->Remove VNET integration for \"$e.name\n\t\t\taz webapp vnet-integration remove -g $resourceGroupName -n $e.name --subscription $subscriptionName\n\t\t}\n\t\t\n\t\tWrite-Host \"-->-->Disable Diagnostic log category AppServiceAntivirusScanAuditLogs and AppServiceFileAuditLogs for \"$e.name\n\t\taz monitor diagnostic-settings create --resource $e.resourceId -n $e.mappedLogAnalyticsWS --workspace $e.mappedLogAnalyticsWSId --logs '[{\\\"category\\\": \\\"AppServiceHTTPLogs\\\",\\\"enabled\\\": true},{\\\"category\\\": \\\"AppServiceConsoleLogs\\\",\\\"enabled\\\": true},{\\\"category\\\": \\\"AppServiceAppLogs\\\",\\\"enabled\\\": true},{\\\"category\\\": \\\"AppServiceAuditLogs\\\",\\\"enabled\\\": true},{\\\"category\\\": \\\"AppServiceIPSecAuditLogs\\\",\\\"enabled\\\": true},{\\\"category\\\": \\\"AppServicePlatformLogs\\\",\\\"enabled\\\": true}]' --metrics '[{\\\"category\\\": \\\"AllMetrics\\\",\\\"enabled\\\": true}]'\n\t\t\n\t\tWrite-Host \"-->-->Stop \"$e.name\n\t\taz webapp stop --name $e.name --resource-group $resourceGroupName --subscription $subscriptionName\n\t\t\n\t\tWrite-Host \"-->-->***************Disable \"$e.name\" Configuration - END*******************\"\n\t\t\n    }\n\tWrite-Host \"-->Update Autoscale Setting to max of 3 instances for \"$e.name\n\taz monitor autoscale update -g $resourceGroupName -n $d.autoScaleSettingName --count 1 --max-count 3 --min-count 1 --subscription $subscriptionName\n\tStart-Sleep -s 30\n\tWrite-Host \"-->Scale Down to B1 Pricing Tier for \"$d.name\n\taz appservice plan update --name $d.name --resource-group $resourceGroupName --sku 'B1' --subscription $subscriptionName\n\tWrite-Host \"-->################# Scale Down \"$d.name\" - END #################\"\n}","scriptArguments":"","powerShellErrorActionPreference":"stop","addSpnToEnvironment":"false","useGlobalConfig":"false","cwd":"","failOnStandardError":"false","powerShellIgnoreLASTEXITCODE":"false"}},{"environment":{},"taskId":"46e4be58-730b-4389-8a2f-ea10b3e5e815","version":"2.*","name":"Disable: Azure CLI for Logic App","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"connectedServiceNameARM":"ec5448bd-1342-4db0-b0b8-75469d37f5f1","scriptType":"ps","scriptLocation":"inlineScript","scriptPath":"","inlineScript":"az extension add --name 'logic'\n$logicAppListObj = az logic workflow list --resource-group '$(resourceGroupName)' --subscription '$(subscriptionName)'\n$logicAppListJson = $logicAppListObj|ConvertFrom-Json\nif(!(test-path $(laDefFilePath)))\n{\n      New-Item -ItemType Directory -Path $(laDefFilePath)\n}\nForEach ($d in $logicAppListJson) {\n\tWrite-Host \"-->Logic App Name = \" $d.name\n\tWrite-Host \"-->Logic App State = \" $d.state\n\tif (($d.name -like 'la-*') -and ($d.state -eq 'Enabled')) {\n\t\t$definitionFileContent = $d | select definition, parameters | ConvertTo-Json -depth 100\n\t\t$fileName= $d.name + \".json\"\n\t\tWrite-Host \"Final JSON File Path : \"$fileName\n\t\tWrite-Host \"-->-->Create/Update Definition File  \"$d.name\" - Start\"\n\t\t$definitionFileContent | Out-File -FilePath $(laDefFilePath)\\$fileName -Force\n\t\tWrite-Host \"-->-->Create/Update Definition File  \"$d.name\" - End\"\n\t\tWrite-Host \"-->-->Disable \"$d.name\" - Start\"\n\t\taz logic workflow update --resource-group '$(resourceGroupName)' --definition $(laDefFilePath)\\$fileName --name $d.name --state \"Disabled\" --subscription '$(subscriptionName)'\n\t\tWrite-Host \"-->-->Disable \"$d.name\" - End\"\n\t}\n}","scriptArguments":"","powerShellErrorActionPreference":"stop","addSpnToEnvironment":"false","useGlobalConfig":"false","cwd":"","failOnStandardError":"false","powerShellIgnoreLASTEXITCODE":"false"}},{"environment":{},"taskId":"46e4be58-730b-4389-8a2f-ea10b3e5e815","version":"2.*","name":"Price Tier Scale Down: Azure CLI for APIM","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"connectedServiceNameARM":"ec5448bd-1342-4db0-b0b8-75469d37f5f1","scriptType":"ps","scriptLocation":"inlineScript","scriptPath":"","inlineScript":"$apimListObj = az apim list --resource-group '$(resourceGroupName)' --subscription '$(subscriptionName)'\n$apimListJson = $apimListObj | ConvertFrom-Json\nForEach ($d in $apimListJson) {\n\tWrite-Host \"-->APIM Name = \" $d.name\n\tWrite-Host \"-->APIM SKU Name = \" $d.sku.name\n\tif (($d.name -like 'apim-atwork-*') -and ($d.sku.name -eq 'Standard')) {\n\t\tWrite-Host \"-->-->Update APIM Price Tier to \"$d.sku.name\" - Start\"\n\t\taz apim update --name $d.name --resource-group '$(resourceGroupName)' --sku-name 'Basic' --subscription '$(subscriptionName)'\n\t\tWrite-Host \"-->-->Update APIM Price Tier to \"$d.sku.name\" - End\"\n\t}\n}","scriptArguments":"","powerShellErrorActionPreference":"stop","addSpnToEnvironment":"false","useGlobalConfig":"false","cwd":"","failOnStandardError":"false","powerShellIgnoreLASTEXITCODE":"false"}}]},{"deploymentInput":{"parallelExecution":{"parallelExecutionType":0},"agentSpecification":{"identifier":"vs2017-win2016"},"skipArtifactsDownload":false,"artifactsDownloadInput":{"downloadInputs":[]},"queueId":211,"demands":[],"enableAccessToken":false,"timeoutInMinutes":0,"jobCancelTimeoutInMinutes":1,"condition":"eq(variables['action'],'up')","overrideInputs":{}},"rank":2,"phaseType":1,"name":"Scale Up: App Service Plan Agent","refName":null,"workflowTasks":[{"environment":{},"taskId":"46e4be58-730b-4389-8a2f-ea10b3e5e815","version":"2.*","name":"Enable: Azure CLI for Logic App","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"connectedServiceNameARM":"ec5448bd-1342-4db0-b0b8-75469d37f5f1","scriptType":"ps","scriptLocation":"inlineScript","scriptPath":"","inlineScript":"az extension add --name 'logic'\n$logicAppListObj = az logic workflow list --resource-group '$(resourceGroupName)' --subscription '$(subscriptionName)'\n$logicAppListJson = $logicAppListObj|ConvertFrom-Json\nif(!(test-path $(laDefFilePath)))\n{\n      New-Item -ItemType Directory -Path $(laDefFilePath)\n}\nForEach ($d in $logicAppListJson) {\n\tWrite-Host \"-->Logic App Name = \" $d.name\n\tWrite-Host \"-->Logic App State = \" $d.state\n\tif (($d.name -like 'la-*') -and ($d.state -eq 'Disabled')) {\n\t\t$definitionFileContent = $d | select definition, parameters | ConvertTo-Json -depth 100\n\t\t$fileName= $d.name + \".json\"\n\t\tWrite-Host \"Final JSON File Path : \"$fileName\n\t\tWrite-Host \"-->-->Create/Update Definition File  \"$d.name\" - Start\"\n\t\t$definitionFileContent | Out-File -FilePath $(laDefFilePath)\\$fileName -Force\n\t\tWrite-Host \"-->-->Create/Update Definition File  \"$d.name\" - End\"\n\t\tWrite-Host \"-->-->Disable \"$d.name\" - Start\"\n\t\taz logic workflow update --resource-group '$(resourceGroupName)' --definition $(laDefFilePath)\\$fileName --name $d.name --state \"Enabled\" --subscription '$(subscriptionName)'\n\t\tWrite-Host \"-->-->Disable \"$d.name\" - End\"\n\t}\n}","scriptArguments":"","powerShellErrorActionPreference":"stop","addSpnToEnvironment":"false","useGlobalConfig":"false","cwd":"","failOnStandardError":"false","powerShellIgnoreLASTEXITCODE":"false"}},{"environment":{},"taskId":"46e4be58-730b-4389-8a2f-ea10b3e5e815","version":"2.*","name":"Price Tier Scale Up: Azure CLI for ASP ","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"connectedServiceNameARM":"ec5448bd-1342-4db0-b0b8-75469d37f5f1","scriptType":"ps","scriptLocation":"inlineScript","scriptPath":"","inlineScript":"$url = \"https://apim-atwork-dev.azure-api.net/la/aspscalemanagement/getaspdetaillist/$(subscriptionName)/$(resourceGroupName)/$(action)\"\n$pipeline = Invoke-RestMethod -Uri $url -Headers @{Authorization = \"Bearer $env:SYSTEM_ACCESSTOKEN\"}\n$resourceGroupName = $pipeline.resourceGroupName\n$subscriptionName = $pipeline.subscriptionName\nForEach ($d in $pipeline.aspList) {\n\tWrite-Host \"-->################# Scale Up \"$d.name\" - START #################\"\n    Write-Host \"-->ASP Name = \"$d.name \n\tWrite-Host \"-->ASP Autoscale Setting Name = \"$d.autoScaleSettingName\n\tWrite-Host \"-->Scale Up to P1V2 Pricing Tier for \"$d.name\n\taz appservice plan update --name $d.name --resource-group $resourceGroupName --sku 'P1V2' --subscription $subscriptionName\n\tStart-Sleep -s 30\n\tWrite-Host \"-->Update Autoscale Setting to max of 10 instances for \"$e.name\n\taz monitor autoscale update -g $resourceGroupName -n $d.autoScaleSettingName --count 5 --max-count 10 --min-count 3 --subscription $subscriptionName\n    ForEach ($e in $d.appServiceList) {\n        Write-Host \"-->-->App Service Name = \"$e.name \n\t\tWrite-Host \"-->-->ASP Service Resource Id = \"$e.resourceId\n\t\tWrite-Host \"-->-->Mapped Log Analytics WS = \"$e.mappedLogAnalyticsWS \n\t\tWrite-Host \"-->-->Mapped Log Analytics WS Id = \"$e.mappedLogAnalyticsWSId\n\t\tWrite-Host \"-->-->VNet Name = \"$e.vnetName \n\t\tWrite-Host \"-->-->VNet Subnet Name = \"$e.vnetSubnetName\n\t\t\n\t\tWrite-Host \"-->-->***************Enable \"$e.name\" Configuration - START*******************\"\n\t\tif ($e.vnetName -ne 'empty') {\n\t\t\tWrite-Host \"-->-->Add VNET integration for \"$e.name\n\t\t\taz webapp vnet-integration add -g $resourceGroupName -n $e.name --vnet $e.vnetName --subnet $e.vnetSubnetName --subscription $subscriptionName\n\t\t}\n\t\t\n\t\tWrite-Host \"-->-->Enable Diagnostic log category AppServiceAntivirusScanAuditLogs and AppServiceFileAuditLogs for \"$e.name\n\t\taz monitor diagnostic-settings create --resource $e.resourceId -n $e.mappedLogAnalyticsWS --workspace $e.mappedLogAnalyticsWSId --logs '[{\\\"category\\\": \\\"AppServiceAntivirusScanAuditLogs\\\",\\\"enabled\\\": true},{\\\"category\\\": \\\"AppServiceFileAuditLogs\\\",\\\"enabled\\\": true},{\\\"category\\\": \\\"AppServiceHTTPLogs\\\",\\\"enabled\\\": true},{\\\"category\\\": \\\"AppServiceConsoleLogs\\\",\\\"enabled\\\": true},{\\\"category\\\": \\\"AppServiceAppLogs\\\",\\\"enabled\\\": true},{\\\"category\\\": \\\"AppServiceAuditLogs\\\",\\\"enabled\\\": true},{\\\"category\\\": \\\"AppServiceIPSecAuditLogs\\\",\\\"enabled\\\": true},{\\\"category\\\": \\\"AppServicePlatformLogs\\\",\\\"enabled\\\": true}]' --metrics '[{\\\"category\\\": \\\"AllMetrics\\\",\\\"enabled\\\": true}]'\n\t\t\n\t\tWrite-Host \"-->-->Start \"$e.name\n\t\taz webapp start --name $e.name --resource-group $resourceGroupName --subscription $subscriptionName\n\t\t\n\t\tWrite-Host \"-->-->***************Enable \"$e.name\" Configuration - END*******************\"\n\t\t\n    }\n\tWrite-Host \"-->################# Scale Up \"$d.name\" - END #################\"\n}","scriptArguments":"","powerShellErrorActionPreference":"stop","addSpnToEnvironment":"false","useGlobalConfig":"false","cwd":"","failOnStandardError":"false","powerShellIgnoreLASTEXITCODE":"false"}},{"environment":{},"taskId":"46e4be58-730b-4389-8a2f-ea10b3e5e815","version":"2.*","name":"Price Tier Scale Up: Azure CLI for APIM","refName":"","enabled":true,"alwaysRun":false,"continueOnError":false,"timeoutInMinutes":0,"definitionType":"task","overrideInputs":{},"condition":"succeeded()","inputs":{"connectedServiceNameARM":"ec5448bd-1342-4db0-b0b8-75469d37f5f1","scriptType":"ps","scriptLocation":"inlineScript","scriptPath":"","inlineScript":"$apimListObj = az apim list --resource-group '$(resourceGroupName)' --subscription '$(subscriptionName)'\n$apimListJson = $apimListObj | ConvertFrom-Json\nForEach ($d in $apimListJson) {\n\tWrite-Host \"-->APIM Name = \" $d.name\n\tWrite-Host \"-->APIM SKU Name = \" $d.sku.name\n\tif (($d.name -like 'apim-atwork-*') -and ($d.sku.name -eq 'Basic')) {\n\t\tWrite-Host \"-->-->Update APIM Price Tier to \"$d.sku.name\" - Start\"\n\t\taz apim update --name $d.name --resource-group '$(resourceGroupName)' --sku-name 'Standard' --subscription '$(subscriptionName)'\n\t\tWrite-Host \"-->-->Update APIM Price Tier to \"$d.sku.name\" - End\"\n\t}\n}","scriptArguments":"","powerShellErrorActionPreference":"stop","addSpnToEnvironment":"false","useGlobalConfig":"false","cwd":"","failOnStandardError":"false","powerShellIgnoreLASTEXITCODE":"false"}}]}],"environmentOptions":{"emailNotificationType":"OnlyOnFailure","emailRecipients":"release.environment.owner;release.creator","skipArtifactsDownload":false,"timeoutInMinutes":0,"enableAccessToken":false,"publishDeploymentStatus":true,"badgeEnabled":false,"autoLinkWorkItems":false,"pullRequestDeploymentEnabled":false},"demands":[],"conditions":[{"name":"ReleaseStarted","conditionType":1,"value":""}],"executionPolicy":{"concurrencyCount":1,"queueDepthCount":0},"schedules":[],"currentRelease":{"id":5490,"url":"https://vsrm.dev.azure.com/JacobsDevOps/0d37c3f6-fb18-4f76-817d-897128337e7e/_apis/Release/releases/5490","_links":{}},"retentionPolicy":{"daysToKeep":30,"releasesToKeep":3,"retainBuild":true},"processParameters":{},"properties":{"BoardsEnvironmentType":{"$type":"System.String","$value":"unmapped"},"LinkBoardsWorkItems":{"$type":"System.String","$value":"False"}},"preDeploymentGates":{"id":0,"gatesOptions":null,"gates":[]},"postDeploymentGates":{"id":0,"gatesOptions":null,"gates":[]},"environmentTriggers":[],"badgeUrl":"https://vsrm.dev.azure.com/JacobsDevOps/_apis/public/Release/badge/0d37c3f6-fb18-4f76-817d-897128337e7e/59/117"}],"artifacts":[],"triggers":[],"releaseNameFormat":"Release-$(rev:r)","tags":[],"properties":{"DefinitionCreationSource":{"$type":"System.String","$value":"ReleaseNew"},"IntegrateBoardsWorkItems":{"$type":"System.String","$value":"False"},"IntegrateJiraWorkItems":{"$type":"System.String","$value":"false"}},"id":59,"name":"GAS-CostOptimization-AtWork","path":"\\","projectReference":null,"url":"https://vsrm.dev.azure.com/JacobsDevOps/0d37c3f6-fb18-4f76-817d-897128337e7e/_apis/Release/definitions/59","_links":{"self":{"href":"https://vsrm.dev.azure.com/JacobsDevOps/0d37c3f6-fb18-4f76-817d-897128337e7e/_apis/Release/definitions/59"},"web":{"href":"https://dev.azure.com/JacobsDevOps/0d37c3f6-fb18-4f76-817d-897128337e7e/_release?definitionId=59"}}}